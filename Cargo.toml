[workspace]
members = ["lib/*"]

[workspace.package]
edition = "2021"
authors = ["Ash Walker <ash@ashwalker.net>"]
repository = "https://git.ashwalker.net/Ash/syrup"
license = "LGPL-3.0-or-later"
publish = ["signal"]

[package]
name = "syrup"
version = "0.1.0"
edition.workspace = true
publish.workspace = true
authors.workspace = true

rust-version = "1.77"

description = "A library for serializing/deserializing syrup data."
readme = true
repository.workspace = true
license.workspace = true

[workspace.dependencies]
thiserror = "^2"

[dependencies]
# meta
thiserror.workspace = true

syrup-proc = { path = "./lib/syrup-proc", version = "^0.1", registry = "signal" }
syrup-derive = { path = "./lib/syrup-derive", version = "^0.1", registry = "signal" }

nom = { version = "^8" }

[dev-dependencies]
proptest = { version = "^1" }
proptest-derive = "^0.5"

[build-dependencies]

[features]
default = []
decode-array = []

[lints]
workspace = true

[workspace.lints.rust]
rust_2024_compatibility = "warn"
let_underscore = "warn"
# fuzzy_provenance_casts = "warn" # unstable
# lossy_provenance_casts = "warn" # unstable
meta_variable_misuse = "warn"
missing_abi = "warn"
# multiple_supertrait_upcastable = "warn" # unstable
# must_not_suspend = "deny" # unstable
unreachable_pub = "warn"
unsafe_code = "warn"
unsafe_op_in_unsafe_fn = "warn"
unstable_features = "warn"
unused_crate_dependencies = "warn"
unused_macro_rules = "warn"
variant_size_differences = "warn"
# embark studios standard (https://github.com/EmbarkStudios/rust-ecosystem/blob/main/lints.toml)
future_incompatible = { level = "deny", priority = -1 }
nonstandard_style = "warn"
rust_2018_idioms = "warn"
unexpected_cfgs = "warn"
# end embark studios lints

[workspace.lints.clippy]
allow_attributes = "warn"
needless_pass_by_value = "warn"
# embark studios standard (https://github.com/EmbarkStudios/rust-ecosystem/blob/main/lints.toml)
all = "warn"
await_holding_lock = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
doc_markdown = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
exit = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
inefficient_to_string = "warn"
invalid_upcast_comparisons = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_ok_or = "warn"
map_err_ignore = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_on_vec_items = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
mem_forget = "warn"
missing_enforced_import_renames = "warn"
mut_mut = "warn"
mutex_integer = "warn"
needless_borrow = "warn"
needless_continue = "warn"
needless_for_each = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
rc_mutex = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
# single_match_else = "warn"
string_add_assign = "warn"
string_add = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
todo = "warn"
trait_duplication_in_bounds = "warn"
unimplemented = "warn"
unnested_or_patterns = "warn"
unused_self = "warn"
useless_transmute = "warn"
verbose_file_reads = "warn"
zero_sized_map_values = "warn"
# end embark studios standard

[workspace.lints.rustdoc]
missing_crate_level_docs = "warn"
